// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: p2p_config.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectionType int32

const (
	ConnectionType_EmptyConnection ConnectionType = 0
	ConnectionType_TCPConnection   ConnectionType = 1
)

// Enum value maps for ConnectionType.
var (
	ConnectionType_name = map[int32]string{
		0: "EmptyConnection",
		1: "TCPConnection",
	}
	ConnectionType_value = map[string]int32{
		"EmptyConnection": 0,
		"TCPConnection":   1,
	}
)

func (x ConnectionType) Enum() *ConnectionType {
	p := new(ConnectionType)
	*p = x
	return p
}

func (x ConnectionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionType) Descriptor() protoreflect.EnumDescriptor {
	return file_p2p_config_proto_enumTypes[0].Descriptor()
}

func (ConnectionType) Type() protoreflect.EnumType {
	return &file_p2p_config_proto_enumTypes[0]
}

func (x ConnectionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionType.Descriptor instead.
func (ConnectionType) EnumDescriptor() ([]byte, []int) {
	return file_p2p_config_proto_rawDescGZIP(), []int{0}
}

type P2PConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrivateKey            string `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	ConsensusPort         uint32 `protobuf:"varint,2,opt,name=consensus_port,json=consensusPort,proto3" json:"consensus_port,omitempty"`
	UseRainTree           bool   `protobuf:"varint,3,opt,name=use_rain_tree,json=useRainTree,proto3" json:"use_rain_tree,omitempty"`
	IsEmptyConnectionType bool   `protobuf:"varint,4,opt,name=is_empty_connection_type,json=isEmptyConnectionType,proto3" json:"is_empty_connection_type,omitempty"` // TODO (Drewsky) switch back to enum
}

func (x *P2PConfig) Reset() {
	*x = P2PConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_p2p_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P2PConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P2PConfig) ProtoMessage() {}

func (x *P2PConfig) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P2PConfig.ProtoReflect.Descriptor instead.
func (*P2PConfig) Descriptor() ([]byte, []int) {
	return file_p2p_config_proto_rawDescGZIP(), []int{0}
}

func (x *P2PConfig) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *P2PConfig) GetConsensusPort() uint32 {
	if x != nil {
		return x.ConsensusPort
	}
	return 0
}

func (x *P2PConfig) GetUseRainTree() bool {
	if x != nil {
		return x.UseRainTree
	}
	return false
}

func (x *P2PConfig) GetIsEmptyConnectionType() bool {
	if x != nil {
		return x.IsEmptyConnectionType
	}
	return false
}

var File_p2p_config_proto protoreflect.FileDescriptor

var file_p2p_config_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x32, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x70, 0x32, 0x70, 0x22, 0xb0, 0x01, 0x0a, 0x09, 0x50, 0x32, 0x50, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x73, 0x75, 0x73, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a,
	0x0d, 0x75, 0x73, 0x65, 0x5f, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x52, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x65,
	0x65, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x73, 0x5f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x38, 0x0a, 0x0e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x43, 0x50, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x10, 0x01, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x70, 0x6f, 0x6b, 0x74, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f,
	0x70, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x32, 0x70, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_p2p_config_proto_rawDescOnce sync.Once
	file_p2p_config_proto_rawDescData = file_p2p_config_proto_rawDesc
)

func file_p2p_config_proto_rawDescGZIP() []byte {
	file_p2p_config_proto_rawDescOnce.Do(func() {
		file_p2p_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_p2p_config_proto_rawDescData)
	})
	return file_p2p_config_proto_rawDescData
}

var file_p2p_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_p2p_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_p2p_config_proto_goTypes = []interface{}{
	(ConnectionType)(0), // 0: p2p.ConnectionType
	(*P2PConfig)(nil),   // 1: p2p.P2PConfig
}
var file_p2p_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_p2p_config_proto_init() }
func file_p2p_config_proto_init() {
	if File_p2p_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_p2p_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P2PConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_p2p_config_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_p2p_config_proto_goTypes,
		DependencyIndexes: file_p2p_config_proto_depIdxs,
		EnumInfos:         file_p2p_config_proto_enumTypes,
		MessageInfos:      file_p2p_config_proto_msgTypes,
	}.Build()
	File_p2p_config_proto = out.File
	file_p2p_config_proto_rawDesc = nil
	file_p2p_config_proto_goTypes = nil
	file_p2p_config_proto_depIdxs = nil
}

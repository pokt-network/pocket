openapi: 3.0.3
servers:
  - url: "http://localhost:50832"
info:
  description: >-
    This is the API definition Pocket Network Node RPC interface.


    Pocket is a distributed network that relays data requests and responses to and from any blockchain system.


    Pocket verifies all relayed data and proportionally rewards the participating nodes with POKT.
  version: 1.0.0
  title: Pocket Network
  termsOfService: "https://pokt.network/terms/"
  contact:
    email: hola@pokt.network
  license:
    name: MIT License
    url: "https://github.com/pokt-network/pocket/blob/main/LICENSE"
tags:
  - name: version
    description: Version of the Pocket API
  - name: health
    description: Liveness of the Pocket API node
  - name: client
    description: Dispatch and relay services
  - name: consensus
    description: Consensus related methods
paths:
  /v1/health:
    get:
      tags:
        - health
      summary: Get the liveness of the Pocket API node
      responses:
        "200":
          description: Healthy
        "404":
          description: Unhealthy - Unreachable
        "500":
          description: Unhealthy - Server Error
  /v1/version:
    get:
      tags:
        - version
      summary: Get the current version of the Pocket Network API
      responses:
        default:
          description: Default response
          content:
            text/plain:
              schema:
                type: string
                example: 1.0.0

  /v1/consensus/state:
    get:
      tags:
        - consensus
      summary: Gets the current height, round and step
      responses:
        default:
          description: Default response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsensusState"
              example: { "height": 75016, "round": 0, "step": 3 }

  /v1/client/broadcast_tx_sync:
    post:
      tags:
        - client
      summary: Broadcast raw transaction bytes
      requestBody:
        description: Raw transaction to be broadcasted
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RawTXRequest"
      responses:
        "200":
          description: Transaction added to the mempool without errors
        "400":
          description: Bad request
          content:
            text/plain:
              example: "description of failure"
        "500":
          description: An error occurred while adding the transaction to the mempool
          content:
            text/plain:
              example: "description of failure"
  /v1/client/get_session:
    post:
      tags:
        - client
      summary: Sends a session request to the network and get the nodes that will be servicing your requests for the session
      requestBody:
        description: Retrieve the list of actors involved in servicing and verifying a session
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionRequest"
        required: true
      responses:
        "200":
          description: Session response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
        "400":
          description: Bad request
          content:
            text/plain:
              example: "description of failure"
        "500":
          description: An error occurred while sending the session request to the network
          content:
            text/plain:
              example: "description of failure"
  # TODO: Update this handler and its schemas when the HandleRelay function has been implemented
  /v1/client/relay:
    post:
      tags:
        - client
      summary: Sends a relay to the servicer to receive a response
      requestBody:
        description: Request a relay to be sent on behalf of your application
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RelayRequest"
        required: true
      responses:
        "200":
          description: Relay request response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RelayResponse"
        "400":
          description: Bad request
          content:
            text/plain:
              example: "description of failure"
        "500":
          description: An error occurred while sending the relay request to the network
          content:
            text/plain:
              example: "description of failure"
  # TODO: Update this handler and its schemas when the HandleChallenge function has been implemented
  /v1/client/challenge:
    post:
      tags:
        - client
      summary: Sends a challenge request to the network
      requestBody:
        description: Request a challenge for invalid data returned from an RPC request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChallengeRequest"
        required: true
      responses:
        "200":
          description: Challenge request response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChallengeResponse"
        "400":
          description: Bad request
          content:
            text/plain:
              example: "description of failure"
        "500":
          description: An error occurred while sending the challenge request to the network
          content:
            text/plain:
              example: "description of failure"

  /v1/p2p/staked_actors_address_book:
    get:
      tags:
        - p2p
      summary: Returns the protocol actor address book
      parameters:
        - in: query
          name: height
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
          description: The height the query will be executed on. By default it uses the current height of the consensus module. This may be the latest height if synched or an earlier height if synching.
        - in: query
          name: actor_type
          required: false
          schema:
            $ref: "#/components/schemas/ActorTypesEnum"
          description: The type of actor the address book will be populated with. By default it returns an address book for all protocol actors supported by the blockchain
      responses:
        "200":
          description: Staked actors response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/P2PStakedActorsResponse"
        "400":
          description: Bad request
          content:
            text/plain:
              example: "description of failure"
        "500":
          description: An error occurred while retrieving the staked actors address book
          content:
            text/plain:
              example: "description of failure"

  /v1/query/account:
    post:
      tags:
        - query
      summary: Returns the data of the account specified at a given height
      requestBody:
        description: Request account data at the specified height, height = 0 is used as the latest
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryAccountHeight"
            example:
              address: da034209758b78eaea06dd99c07909ab54c99b45
              height: 0
        required: true
      responses:
        "200":
          description: Returns account data at the specified height
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        "400":
          description: Bad request
          content:
            text/plain:
              example: "description of failure"
        "500":
          description: An error occurred while retrieving the account data at the specified height
          content:
            text/plain:
              example: "description of failure"
  /v1/query/accounts:
    post:
      tags:
        - query
      summary: Returns the paginated data of all accounts specified at a given height
      requestBody:
        description: Request all account data at the specified height, height = 0 is used as the latest; Max per_page=1000
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryHeightPaginated"
            example:
              height: 0
              page: 1
              per_page: 50
        required: true
      responses:
        "200":
          description: Returns account data for all accounts at the specified height
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueryAccountsResponse"
        "400":
          description: Bad request
          content:
            text/plain:
              example: "description of failure"
        "500":
          description: An error occurred while retrieving accounts at the specified height
          content:
            text/plain:
              example: "description of failure"
  /v1/query/account_txs:
    post:
      tags:
        - query
      summary: Returns all transactions sent by the specified address paginated
      requestBody:
        description: Returns all transactions sent by the address provided; Max per_page=1000, can be sorted either asc or desc (default)
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryAccountPaginated"
            example:
              address: da034209758b78eaea06dd99c07909ab54c99b45
              page: 1
              per_page: 1000
              sort: desc
        required: true
      responses:
        "200":
          description: Returns the transaction list for the account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueryAccountTxsResponse"
        "400":
          description: Bad request
          content:
            text/plain:
              example: "description of failure"
        "500":
          description: An error occurred while retrieving the transactions for the account
          content:
            text/plain:
              example: "description of failure"
  /v1/query/all_chain_params:
    get:
      tags:
        - query
      summary: Returns the current values of all on-chain governance parameters
      responses:
        "200":
          description: Returns all the chain parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllChainParamsResponse"
        "500":
          description: An error occurred while retrieving the current node parameters
          content:
            text/plain:
              example: "description of failure"

externalDocs:
  description: Find out more about Pocket Network
  url: "https://pokt.network"
components:
  schemas:
    # Requests
    ChallengeRequest:
      type: object
      required:
        - majority_responses
        - minority_response
        - address
        - servicer_pub_key
        - session_id
      properties:
        majority_responses:
          type: array
          items:
            $ref: "#/components/schemas/RelayResponse"
        minority_response:
          $ref: "#/components/schemas/RelayResponse"
        address:
          type: string
        servicer_pub_key:
          type: string
        session_id:
          type: string
    QueryAccountHeight:
      type: object
      required:
        - height
        - address
      properties:
        height:
          type: integer
          format: int64
        address:
          type: string
    QueryAccountPaginated:
      type: object
      required:
        - address
        - page
        - per_page
      properties:
        address:
          type: string
        page:
          type: integer
          format: int64
        per_page:
          type: integer
          format: int64
        sort:
          type: string
    QueryHeightPaginated:
      type: object
      required:
        - height
        - page
        - per_page
      properties:
        height:
          type: integer
          format: int64
        page:
          type: integer
          format: int64
        per_page:
          type: integer
          format: int64
        sort:
          type: string
    QueryHash:
      type: object
      required:
        - hash
      properties:
        hash:
          type: string
    QueryHeight:
      type: object
      required:
        - height
      properties:
        height:
          type: integer
          format: int64
    QueryPaginated:
      type: object
      required:
        - page
        - per_page
      properties:
        page:
          type: integer
          format: int64
        per_page:
          type: integer
          format: int64
        sort:
          type: string
    QueryParameter:
      type: object
      required:
        - param_name
        - height
      properties:
        param_name:
          type: string
        height:
          type: integer
          format: int64
    RawTXRequest:
      type: object
      required:
        - address
        - raw_hex_bytes
      properties:
        address:
          type: string
        raw_hex_bytes:
          type: string
    ConsensusState:
      type: object
      required:
        - height
        - round
        - step
      properties:
        height:
          type: integer
          format: int64
        round:
          type: integer
          format: int64
        step:
          type: integer
          format: int64
    ProtocolActor:
      type: object
      required:
        - address
        - actor_type
        - public_key
        - chains
        - service_url
        - staked_amount
        - paused_height
        - unstaking_height
        - output_addr
      properties:
        address:
          type: string
        actor_type:
          $ref: "#/components/schemas/ActorTypesEnum"
        public_key:
          type: string
        chains:
          type: array
          items:
            type: string
        service_url:
          type: string
        staked_amount:
          type: string
        paused_height:
          type: integer
          format: int64
        unstaking_height:
          type: integer
          format: int64
        output_addr:
          type: string
    P2PStakedActorsResponse:
      type: object
      required:
        - actors
        - height
      properties:
        actors:
          type: "array"
          items:
            $ref: "#/components/schemas/Actor"
        height:
          type: integer
          format: int64

    # Types
    AAT:
      type: object
      required:
        - version
        - app_pub_key
        - client_pub_key
        - app_signature
      properties:
        version:
          type: string
        app_pub_key:
          type: string
        client_pub_key:
          type: string
        app_signature:
          type: string
    ActorTypesEnum:
      type: string
      enum:
        - validator
        - servicer
        - fisherman
        - application
    Actor:
      type: object
      required:
        - type
        - address
        - public_key
        - service_url
      properties:
        type:
          $ref: "#/components/schemas/ActorTypesEnum"
        address:
          type: string
        public_key:
          type: string
        service_url:
          type: string
    Block:
      type: object
      required:
        - block_header
        - transactions
      properties:
        block_header:
          $ref: "#/components/schemas/BlockHeader"
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/IndexedTransaction"
    BlockHeader:
      type: object
      required:
        - height
        - network_id
        - state_hash
        - prev_state_hash
        - proposer_addr
        - quorum_cert
        - timestamp
      properties:
        height:
          type: integer
          format: int64
        network_id:
          type: string
        state_hash:
          type: string
        prev_state_hash:
          type: string
        proposer_addr:
          type: string
        quorum_cert:
          $ref: "#/components/schemas/QuorumCertificate"
        timestamp:
          type: string
    Coin:
      type: object
      required:
        - amount
        - denom
      properties:
        amount:
          type: string
        denom:
          type: string
    Fee:
      type: object
      required:
        - amount
        - denom
      properties:
        amount:
          type: string
        denom:
          type: string
    Header:
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
        value:
          type: string
    Headers:
      type: array
      items:
        $ref: "#/components/schemas/Header"
    Identifiable:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
    MessageSend:
      type: object
      required:
        - from_addr
        - to_addr
        - amount
        - denom
      properties:
        from_addr:
          type: string
        to_addr:
          type: string
        amount:
          type: string
        denom:
          type: string
    MessageStake:
      type: object
      required:
        - actor_type
        - public_key
        - chains
        - service_url
        - output_address
        - signer
        - amount
        - denom
      properties:
        actor_type:
          $ref: "#/components/schemas/ActorTypesEnum"
        public_key:
          type: string
        chains:
          type: array
          items:
            type: string
        service_url:
          type: string
        output_address:
          type: string
        signer:
          type: string
        amount:
          type: string
        denom:
          type: string
    MessageEditStake:
      type: object
      required:
        - actor_type
        - address
        - chains
        - service_url
        - signer
        - amount
        - denom
      properties:
        actor_type:
          $ref: "#/components/schemas/ActorTypesEnum"
        address:
          type: string
        chains:
          type: array
          items:
            type: string
        service_url:
          type: string
        signer:
          type: string
        amount:
          type: string
        denom:
          type: string
    MessageUnstake:
      type: object
      required:
        - actor_type
        - address
        - signer
      properties:
        actor_type:
          $ref: "#/components/schemas/ActorTypesEnum"
        address:
          type: string
        signer:
          type: string
    MessageUnpause:
      type: object
      required:
        - actor_type
        - address
        - signer
      properties:
        actor_type:
          $ref: "#/components/schemas/ActorTypesEnum"
        address:
          type: string
        signer:
          type: string
    MessageChangeParameter:
      type: object
      required:
        - signer
        - owner
        - parameter
      properties:
        signer:
          type: string
        owner:
          type: string
        parameter:
          $ref: "#/components/schemas/Parameter"
    Parameter:
      type: object
      required:
        - parameter_name
        - parameter_value
      properties:
        parameter_name:
          type: "string"
        parameter_value:
          type: "string"
    PartialSignature:
      type: object
      required:
        - signature
        - address
      properties:
        signature:
          type: string
        address:
          type: string
    Payload:
      type: object
      required:
        - data
        - method
        - path
        - headers
      properties:
        data:
          type: string
        method:
          type: string
        path:
          type: string
        headers:
          $ref: "#/components/schemas/Headers"
    Pool:
      type: object
      required:
        - address
        - name
        - amount
        - denom
      properties:
        address:
          type: string
        name:
          type: string
        amount:
          type: string
        denom:
          type: string
    QuorumCertificate:
      type: object
      required:
        - height
        - round
        - step
        - block
        - threshold_sig
        - transactions
      properties:
        height:
          type: integer
          format: int64
        round:
          type: integer
          format: int64
        step:
          type: string
        block:
          type: string
        threshold_sig:
          $ref: "#/components/schemas/ThresholdSignature"
        transactions:
          type: array
          items:
            type: string
    RelayRequestMeta:
      type: object
      required:
        - block_height
        - servicer_pub_key
        - chain
        - geozone
        - token
        - signature
      properties:
        block_height:
          type: integer
          format: int64
        servicer_pub_key:
          type: string
        chain:
          $ref: "#/components/schemas/Identifiable"
        geozone:
          $ref: "#/components/schemas/Identifiable"
        token:
          $ref: "#/components/schemas/AAT"
        signature:
          type: string
    Signature:
      type: object
      required:
        - public_key
        - signature
      properties:
        public_key:
          type: string
        signature:
          type: string
    TxMessage:
      type: object
      required:
        - fee
        - message
        - nonce
        - signature
      properties:
        fee:
          $ref: "#/components/schemas/Fee"
        message:
          oneOf:
            - $ref: "#/components/schemas/MessageSend"
            - $ref: "#/components/schemas/MessageStake"
            - $ref: "#/components/schemas/MessageEditStake"
            - $ref: "#/components/schemas/MessageUnstake"
            - $ref: "#/components/schemas/MessageUnpause"
            - $ref: "#/components/schemas/MessageChangeParameter"
        nonce:
          type: string
        signature:
          $ref: "#/components/schemas/Signature"
    Transaction:
      type: object
      required:
        - hash
        - height
        - index
        - txMsg
      properties:
        hash:
          type: string
        height:
          type: integer
          format: int64
        index:
          type: integer
          format: int32
        txMsg:
          $ref: "#/components/schemas/TxMessage"
    IndexedTransaction:
      type: object
      required:
        - height
        - index
        - result_code
        - error
        - signer_addr
        - recipient_addr
        - message_type
        - tx
      properties:
        height:
          type: integer
          format: int64
        index:
          type: integer
          format: int32
        result_code:
          type: integer
          format: int32
        signer_addr:
          type: string
        recipient_addr:
          type: string
        message_type:
          type: string
        tx:
          $ref: "#/components/schemas/Transaction"
    ThresholdSignature:
      type: object
      required:
        - signatures
      properties:
        signatures:
          type: array
          items:
            $ref: "#/components/schemas/PartialSignature"

  securitySchemes: {}
  links: {}
  callbacks: {}
security: []

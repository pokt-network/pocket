syntax = "proto3";

package core;

option go_package = "github.com/pokt-network/pocket/shared/core/types";

import "google/protobuf/timestamp.proto";

message BlockHeader {
  uint64 height = 1;
  string networkId = 2; // used to differentiate what network the chain is on (Tendermint legacy)
  string stateHash = 3; // the state committment at this blocks height
  string prevStateHash = 4; // the state committment at this block height-1
  bytes proposerAddress = 5; // the address of the proposer of this block; TECHDEBT: Change this to an string
  bytes quorumCertificate = 6; // the quorum certificate containing signature from 2/3+ validators at this height
  google.protobuf.Timestamp timestamp = 7; // unixnano timestamp of when the block was created
  map<string, string> state_tree_hashes = 8; // map[TreeName]hex(TreeRootHash)
  string val_set_hash = 9; // the hash of the current validator set who were able to sign the current block
  string next_val_set_hash = 10; // the hash of the next validator set; needed to ensure the validity of staked validators proposing the next block
}

message Block {
  core.BlockHeader blockHeader = 1;
  repeated bytes transactions = 2;
}

message ValidatorSet {
    repeated ValidatorIdentity validators = 1;
}

// DISCUSS(M5): Should we include voting power in this identity?
// Ignoring voting_power/stake for leader election? Is this needed - I dont think so
message ValidatorIdentity {
    string address = 1;
    string pub_key = 2;
}

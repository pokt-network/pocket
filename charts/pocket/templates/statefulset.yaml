apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "pocket.fullname" . }}
  labels:
    {{- include "pocket.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "pocket.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- range $key, $value := . }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
      labels:
        {{- include "pocket.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pocket.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command:
            [
              "sh",
              "-c",
              "until nc -z $(POSTGRES_HOST) $(POSTGRES_PORT); do echo waiting for postgres...; sleep 2; done;",
            ]
          env:
            - name: POCKET_P2P_HOSTNAME
              valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
            - name: POSTGRES_HOST
              value: {{ include "pocket.postgresqlHost" . }}
            - name: POSTGRES_PORT
              value: {{ include "pocket.postgresqlPort" . | quote }}
      containers:
        - name: pocket
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - pocket
            - -config=/pocket/configs/config.json
            - -genesis=/pocket/configs/genesis.json
          ports:
            - containerPort: {{ .Values.service.ports.consensus }}
              name: consensus
            - containerPort: {{ .Values.service.ports.rpc }}
              name: rpc
            - containerPort: {{ .Values.service.ports.metrics }}
              name: metrics
          env:
          {{ if or .Values.privateKeySecretKeyRef.name .Values.privateKeySecretKeyRef.key }}
            - name: POCKET_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.privateKeySecretKeyRef.name | quote }}
                  key: {{ .Values.privateKeySecretKeyRef.key | quote }}
            - name: POCKET_CONSENSUS_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.privateKeySecretKeyRef.name | quote }}
                  key: {{ .Values.privateKeySecretKeyRef.key | quote }}
            - name: POCKET_P2P_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.privateKeySecretKeyRef.name | quote }}
                  key: {{ .Values.privateKeySecretKeyRef.key | quote }}
          {{ end }}
            - name: POSTGRES_USER
            {{ include "pocket.postgresqlUserValueOrSecretRef" . | nindent 14 }}
            - name: POSTGRES_PASSWORD
            {{ include "pocket.postgresqlPasswordSecretKeyRef" . | nindent 14 }}
            - name: POSTGRES_HOST
              value: {{ include "pocket.postgresqlHost" . }}
            - name: POSTGRES_PORT
              value: {{ include "pocket.postgresqlPort" . | quote }}
            - name: POSTGRES_DB
              value: {{ include "pocket.postgresqlDatabase" . }}
            - name: POCKET_PERSISTENCE_POSTGRES_URL
              value: "postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)"
            - name: POCKET_PERSISTENCE_NODE_SCHEMA
              value: {{ include "pocket.postgresqlSchema" . }}
            - name: POCKET_P2P_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          livenessProbe:
            httpGet:
              path: /v1/health
              port: rpc
          readinessProbe:
            httpGet:
              path: /v1/health
              port: rpc
          volumeMounts:
            - name: config-volume
              mountPath: /pocket/configs/config.json
              subPath: config.json
            - name: genesis-volume
              mountPath: /pocket/configs/genesis.json
              subPath: {{ if .Values.genesis.preProvisionedGenesis.enabled }}genesis.json{{ else }}{{ .Values.genesis.externalConfigMap.key }}{{ end }}
            - name: data-dir
              mountPath: /pocket/data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: config-volume
        configMap:
          name: {{ include "pocket.fullname" . }}-config
      - name: genesis-volume
        configMap:
          name: {{ include "pocket.genesisConfigMap" . }}
      - name: data-dir
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ default (printf "%s-%s" (include "pocket.fullname" .) "data") .Values.persistence.existingClaim }}
      {{- else }}
        emptyDir: {}
      {{- end }}


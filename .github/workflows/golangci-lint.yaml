on:
  workflow_dispatch:
  push:
    branches: [main]
    paths-ignore:
      - "docs/**"
      - "**.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**.md"

env:
  # Even though we can test against multiple versions, this one is considered a target version.
  TARGET_GOLANG_VERSION: "1.19"

jobs:
  golangci:
    name: Go Linter
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ["1.19"] # As we are relying on generics, we can't go lower than 1.18.
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}
      - name: Setup Golang caches
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-${{ matrix.go }}-
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: ${{ env.PROTOC_VERSION }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: install cli dependencies
        run: make install_cli_deps
      - name: generate protobufs, RPC server, RPC client and mocks
        run: make protogen_local && make mockgen && make generate_rpc_openapi
      - name: golangci-lint
        if: ${{ always() && env.TARGET_GOLANG_VERSION == matrix.go }}
        uses: golangci/golangci-lint-action@v3
        with:
          only-new-issues: true

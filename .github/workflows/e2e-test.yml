name: E2E test on DevNet

# Only trigger, when the build workflow succeeded, and allow manual triggering.
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Test, build and push artifacts"]
    types:
      - completed

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'e2e-devnet-test')
    env:
      ARGO_SERVER: "workflows.dev-us-east4-1.poktnodes.network:8443"
      ARGO_HTTP1: true
      ARGO_SECURE: true
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.ARGO_WORKFLOW_EXTERNAL }}"

      - id: "get-credentials"
        uses: "google-github-actions/get-gke-credentials@v1"
        with:
          cluster_name: "nodes-gcp-dev-us-east4-1"
          location: "us-east4"

      - id: "install-argo"
        run: |
          curl -sLO https://github.com/argoproj/argo-workflows/releases/download/v3.4.7/argo-linux-amd64.gz
          gunzip argo-linux-amd64.gz
          chmod +x argo-linux-amd64
          mv ./argo-linux-amd64 /usr/local/bin/argo
          argo version

      - id: "wait-for-infra"
        shell: bash
        run: |
          start_time=$(date +%s) # store current time
          timeout=900 # timeout in seconds

          until argo template get dev-e2e-tests --namespace=devnet-issue-${{ github.event.pull_request.number }}; do
              current_time=$(date +%s)
              elapsed_time=$(( current_time - start_time ))
              if (( elapsed_time > timeout )); then
                  echo "Timeout of $timeout seconds reached. Exiting..."
                  exit 1
              fi
              echo "Waiting for devnet-issue-${{ github.event.pull_request.number }} to be provisioned..."
              sleep 5
          done

      - id: "run-e2e-tests"
        run: |
          argo submit --wait --log --namespace devnet-issue-${{ github.event.pull_request.number }} --from 'wftmpl/dev-e2e-tests' --parameter gitsha="${{ github.event.pull_request.head.sha }}"
